{"id":7,"fid":7,"name":"Reverse Integer","slug":"reverse-integer","link":"https://leetcode.com/problems/reverse-integer/description/","percent":25.059938837402512,"level":"Easy","category":"algorithms","totalAC":"594K","totalSubmit":"2.4M","desc":"Given a 32-bit signed integer, reverse digits of an integer.\r\n\r\nExample 1:\r\n\r\n\r\nInput: 123\r\nOutput: 321\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: -123\r\nOutput: -321\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: 120\r\nOutput: 21\r\n\r\n\r\nNote:\r\nAssume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−2^31,  2^31 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int reverse(int x) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int reverse(int x) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def reverse(self, x):\r\n        \"\"\"\r\n        :type x: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def reverse(self, x: 'int') -> 'int':\n        "},{"value":"c","text":"C","defaultCode":"int reverse(int x) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int Reverse(int x) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} x\n * @return {number}\n */\nvar reverse = function(x) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} x\r\n# @return {Integer}\r\ndef reverse(x)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func reverse(_ x: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func reverse(x int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def reverse(x: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun reverse(x: Int): Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn reverse(x: i32) -> i32 {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $x\n     * @return Integer\n     */\n    function reverse($x) {\n        \n    }\n}"}],"testcase":"123","testable":true,"templateMeta":{"name":"reverse","params":[{"name":"x","type":"integer"}],"return":{"type":"integer"}}}