{"id":713,"fid":713,"name":"Subarray Product Less Than K","slug":"subarray-product-less-than-k","link":"https://leetcode.com/problems/subarray-product-less-than-k/description/","percent":35.45367948349638,"level":"Medium","category":"algorithms","totalAC":"23.6K","totalSubmit":"66.4K","desc":"Your are given an array of positive integers nums.\r\nCount and print the number of (contiguous) subarrays where the product of all the elements in the subarray is less than k.\r\n\r\nExample 1:\r\n\r\nInput: nums = [10, 5, 2, 6], k = 100\r\nOutput: 8\r\nExplanation: The 8 subarrays that have product less than 100 are: [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6].\r\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\r\n\r\n\r\n\r\nNote:\r\n0 < nums.length .\r\n0 < nums[i] < 1000.\r\n0 .\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int numSubarrayProductLessThanK(vector<int>& nums, int k) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int numSubarrayProductLessThanK(int[] nums, int k) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numSubarrayProductLessThanK(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numSubarrayProductLessThanK(self, nums: 'List[int]', k: 'int') -> 'int':\n        "},{"value":"c","text":"C","defaultCode":"int numSubarrayProductLessThanK(int* nums, int numsSize, int k) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NumSubarrayProductLessThanK(int[] nums, int k) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar numSubarrayProductLessThanK = function(nums, k) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef num_subarray_product_less_than_k(nums, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numSubarrayProductLessThanK(_ nums: [Int], _ k: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func numSubarrayProductLessThanK(nums []int, k int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numSubarrayProductLessThanK(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numSubarrayProductLessThanK(nums: IntArray, k: Int): Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn num_subarray_product_less_than_k(nums: Vec<i32>, k: i32) -> i32 {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function numSubarrayProductLessThanK($nums, $k) {\n        \n    }\n}"}],"testcase":"[10,5,2,6]\n100","testable":true,"templateMeta":{"name":"numSubarrayProductLessThanK","params":[{"name":"nums","type":"integer[]"},{"name":"k","type":"integer"}],"return":{"type":"integer"}}}